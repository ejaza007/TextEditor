#BlueJ class context
comment0.target=DocumentIO
comment0.text=\n\ This\ class\ can\ both\ read\ and\ write\ to\ a\ file.\ But\n\ not\ both.\ \ To\ select\ behavior\ use\ method\ set_io_mode.\n\ If\ the\ mode\ is\ changed\ while\ the\ file\ is\ open,\ the\n\ file\ will\ be\ closed\ and\ the\ mode\ will\ be\ changed.\n
comment1.params=
comment1.target=DocumentIO()
comment1.text=\n\ Default\ constructor.\n
comment10.params=
comment10.target=java.lang.String\ curr_file_name()
comment10.text=\n\ Name\ of\ the\ file\ that\ is\ currently\ being\ manipulated.\n\ \n\ @return\ Return\ string\ of\ file\ name,\ or\ null\ if\ no\ file.\n
comment2.params=mode
comment2.target=boolean\ set_io_mode(java.lang.String)
comment2.text=\n\ Used\ to\ determine\ if\ the\ IO\ mode\ is\ input\ or\ output.\n\ If\ there\ is\ a\ mode\ switch,\ then\ any\ open\ file\ should\n\ be\ closed.\n\ \n\ @return\ False\ is\ returned\ if\ mode\ is\ unknown,\ otherwise\ true.\n
comment3.params=file_name
comment3.target=void\ open_file(java.lang.String)
comment3.text=\n\ Attempt\ to\ open\ file\ using\ passed\ file\ name.\n\ \n\ @parameter\ file_name\ Name\ of\ the\ file\ to\ open.\n
comment4.params=
comment4.target=void\ open_file()
comment4.text=\n\ Attempt\ to\ open\ file\ using\ stored\ file\ name.\n
comment5.params=
comment5.target=void\ close_file()
comment5.text=\n\ Used\ by\ both\ internal\ and\ external\ methods,\ will\ check\n\ if\ file\ is\ open,\ then\ close\ the\ appropriate\ stream\ if\ it\ is.\n\ Does\ nothing\ if\ file\ is\ closed.\n
comment6.params=
comment6.target=java.lang.String\ read_line()
comment6.text=\n\ Used\ during\ input\ mode,\ and\ will\ return\ a\ string\ if\n\ something\ to\ be\ read\ is\ available.\ \ Checks\ to\ see\ if\ \n\ file\ is\ open\ and\ in\ correct\ mode.\n\ \n\ @return\ Returns\ string\ from\ scanner.\ \ If\ mode\ is\ not\n\ \ \ \ \ \ \ \ \ correct,\ file\ not\ open,\ or\ has\ no\ more\ lines;\n\ \ \ \ \ \ \ \ \ returns\ a\ null\ value;\n
comment7.params=
comment7.target=boolean\ has_more_lines()
comment7.text=\n\ Used\ during\ input\ mode,\ and\ will\ return\ a\ true\ if\n\ something\ is\ available\ to\ be\ read.\ \ Checks\ to\ see\ if\ \n\ file\ is\ open\ and\ in\ correct\ mode.\n\ \n\ @return\ Returns\ true\ if\ something\ is\ available,\ and\n\ \ \ \ \ \ \ \ \ false\ in\ all\ other\ cases\ (including\ incorrect\ mode);\n
comment8.params=str
comment8.target=boolean\ write_line(java.lang.String)
comment8.text=\n\ Will\ write\ a\ string\ to\ the\ open\ file\ with\ a\ new\ line\ at\ the\ end.\n\ Checks\ for\ correct\ mode\ and\ if\ file\ is\ open.\n\ \n\ @return\ Returns\ true\ if\ file\ was\ written\ to,\ otherwise\ false.\n
comment9.params=str
comment9.target=boolean\ write(java.lang.String)
comment9.text=\n\ Will\ write\ a\ string\ to\ the\ open\ file\ without\ a\ new\ line\ \n\ at\ the\ end.\ \ Checks\ for\ correct\ mode\ and\ if\ file\ is\ open.\n\ \n\ @return\ Returns\ true\ if\ file\ was\ written\ to,\ otherwise\ false.\n
numComments=11
