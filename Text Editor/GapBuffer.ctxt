#BlueJ class context
comment0.target=GapBuffer
comment1.params=
comment1.target=GapBuffer()
comment1.text=\n\ Default\ constructor.\n
comment10.params=
comment10.target=int\ after_length()
comment10.text=\n\ Utility\ method,\ returns\ the\ stored\ string\ length\ after\ the\ cursor.\n
comment11.params=
comment11.target=int\ cursor_position()
comment11.text=\n\ Returns\ the\ current\ cursor\ postion\ at\ the\ start\ of\ the\ empty\ space.\n
comment12.params=
comment12.target=boolean\ cursor_left()
comment12.text=\n\ Move\ the\ cursor\ left\ one\ position.\n\ \n\ @return\ Return\ a\ boolean\ value\ true\ if\ the\ cursor\ moved\ to\ the\ left,\n\ \ \ \ \ \ \ \ \ and\ false\ if\ it\ did\ not.\n
comment13.params=char_count
comment13.target=boolean\ cursor_left(int)
comment13.text=\n\ Move\ the\ cursor\ left\ n\ positions\ equal\ to\ char_count.\n\ \n\ @return\ Return\ a\ boolean\ value\ true\ if\ the\ cursor\ moved\ at\ least\ once\n\ \ \ \ \ \ \ \ \ to\ the\ left,\ and\ false\ if\ it\ did\ not.\n
comment14.params=
comment14.target=boolean\ cursor_right()
comment14.text=\n\ Move\ the\ cursor\ right\ one\ position.\n\ \n\ @return\ Return\ a\ boolean\ value\ true\ if\ the\ cursor\ moved\ to\ the\ right,\n\ \ \ \ \ \ \ \ \ and\ false\ if\ it\ did\ not.\n
comment15.params=char_count
comment15.target=boolean\ cursor_right(int)
comment15.text=\n\ Move\ the\ cursor\ right\ n\ positions\ equal\ to\ char_count.\n\ \n\ @return\ Return\ a\ boolean\ value\ true\ if\ the\ cursor\ moved\ at\ least\ once\n\ \ \ \ \ \ \ \ \ to\ the\ right,\ and\ false\ if\ it\ did\ not.\n
comment16.params=
comment16.target=boolean\ cursor_move_start_line()
comment16.text=\n\ Move\ the\ cursor\ to\ the\ start\ of\ the\ buffer,\ position\ 0,\n\ and\ move\ the\ front\ of\ the\ string\ to\ the\ appropriate\ position.\n\ This\ work\ is\ done\ using\ the\ cursor_left()\ method.\n\ \n\ @return\ Return\ a\ boolean\ if\ the\ cursor\ is\ at\ the\ start\ of\n\ \ \ \ \ \ \ \ \ the\ buffer.\n
comment17.params=
comment17.target=boolean\ cursor_move_end_line()
comment17.text=\n\ Move\ the\ cursor\ to\ the\ end\ of\ the\ buffer,\ position\ 0,\n\ and\ move\ the\ back\ of\ the\ string\ to\ the\ appropriate\ position.\n\ This\ work\ is\ done\ using\ the\ cursor_right()\ method.\n\ \n\ @return\ Return\ a\ boolean\ if\ the\ cursor\ is\ at\ end\ of\n\ \ \ \ \ \ \ \ \ the\ buffer.\n
comment18.params=
comment18.target=boolean\ remove_char_toleft()
comment18.text=\n\ Remove\ the\ character\ to\ the\ left,\ decreasing\ string\ size.\n\ \n\ @return\ Return\ a\ boolean\ value\ true\ if\ one\ character\ to\ the\ left\n\ \ \ \ \ \ \ \ \ was\ removed,\ and\ false\ if\ it\ did\ not.\n
comment19.params=char_count
comment19.target=boolean\ remove_char_toleft(int)
comment19.text=\n\ Remove\ the\ character\ to\ the\ left\ n\ characters,\ decreasing\ string\ size.\n\ \n\ @return\ Return\ a\ boolean\ value\ true\ if\ at\ least\ one\ character\ to\ the\ left\n\ \ \ \ \ \ \ \ \ was\ removed,\ and\ false\ if\ it\ did\ not.\n
comment2.params=growth
comment2.target=GapBuffer(int)
comment2.text=\n\ Overloaded\ constructor.\n\ \n\ @param\ growth\ will\ set\ the\ growth\ field,\ indication\ how\ large\n\ the\ gap\ buffer\ will\ grow\ by.\n
comment20.params=str_value
comment20.target=boolean\ insert_text(java.lang.String)
comment20.text=\n\ Insert\ n\ characters\ at\ the\ cursor\ position,\ reducing\ the\ gap\ size.\n\ \n\ @return\ Return\ true\ if\ at\ least\ one\ character\ was\ inserted,\ otherwise\ false.\n
comment21.params=char_value
comment21.target=boolean\ insert_text(char)
comment21.text=\n\ Insert\ one\ character\ at\ the\ cursor\ position,\ reducing\ gap\ size.\n\ \n\ @return\ Return\ true\ if\ the\ character\ was\ inserted,\ otherwise\ false.\n
comment3.params=str_value
comment3.target=void\ load_string(java.lang.String)
comment3.text=\n\ Loads\ a\ string\ into\ the\ class,\ removing\ a\ previously\ stored\ string.\n\ \n\ Assumption\:\ is\ that\ the\ cursor\ will\ start\ at\ location\ zero.\n
comment4.params=
comment4.target=void\ empty_buffer()
comment4.text=\n\ Utility\ method,\ will\ empty\ the\ current\ buffer,\ set\ cursor\ to\ zero,\n\ make\ rest\ of\ array\ spaces.\n
comment5.params=
comment5.target=void\ grow_buffer()
comment5.text=\n\ Utilty\ method,\ will\ grow\ the\ string,\ preserving\ the\ \n\ internal\ gap\ buffer\ structure.\n
comment6.params=
comment6.target=void\ validate_buffer()
comment6.text=\n\ Utility\ method,\ verify\ that\ buffer\ structure\ is\ correct.\ \ These\n\ are\ checks\ that\ need\ to\ be\ done\ in\ a\ variety\ of\ places.\n
comment7.params=
comment7.target=java.lang.String\ toString()
comment7.text=\n\ Return\ the\ string\ stored\ in\ the\ buffer\ without\ the\ middle\ gap.\n
comment8.params=
comment8.target=int\ length()
comment8.text=\n\ Utility\ method,\ returns\ length\ of\ the\ stored\ string\ without\ the\ empty\ space\ (gap).\n
comment9.params=
comment9.target=int\ before_length()
comment9.text=\n\ Utility\ method,\ returns\ the\ stored\ string\ length\ before\ the\ cursor.\n
numComments=22
